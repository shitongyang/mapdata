<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="iscas.stategrid.mapdata.mapper.st_locationEntityMapper">
  <resultMap id="BaseResultMap" type="iscas.stategrid.mapdata.domain.st_locationEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="st_name" jdbcType="VARCHAR" property="stName" />
    <result column="lat" jdbcType="VARCHAR" property="lat" />
    <result column="lng" jdbcType="VARCHAR" property="lng" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="area" jdbcType="VARCHAR" property="area" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, st_name, lat, lng, province, city, area
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from st_location
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from st_location
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="iscas.stategrid.mapdata.domain.st_locationEntity">
    insert into st_location (id, st_name, lat, 
      lng, province, city, 
      area)
    values (#{id,jdbcType=INTEGER}, #{stName,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, 
      #{lng,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="iscas.stategrid.mapdata.domain.st_locationEntity">
    insert into st_location
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stName != null">
        st_name,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="area != null">
        area,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stName != null">
        #{stName,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="iscas.stategrid.mapdata.domain.st_locationEntityExample" resultType="java.lang.Long">
    select count(*) from st_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="iscas.stategrid.mapdata.domain.st_locationEntity">
    update st_location
    <set>
      <if test="stName != null">
        st_name = #{stName,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="iscas.stategrid.mapdata.domain.st_locationEntity">
    update st_location
    set st_name = #{stName,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--获得全国、区域、省、市的拓扑线路-->
  <select id="selectGlobalTopo" resultType="java.util.Map">
  select a.Flng,a.Flat,b.Tlng,b.Tlat,a.line_name as name,CEILING(rand()*5) as type from (select dc_line.`from`,dc_line.line_name,st_location.lng as Flng,st_location.lat as Flat from dc_line,st_location where dc_line.`from`=st_location.st_name)a left join (select dc_line.`to`,dc_line.line_name,st_location.lng as Tlng,st_location.lat as Tlat from dc_line,st_location where dc_line.`to`=st_location.st_name) b on a.line_name=b.line_name
  </select>
  <select id="selectAreaTopo"  parameterType="java.lang.String" resultType="java.util.Map">
select m.`from`,m.line_name as name,m.Flat,m.Flng,n.Tlng,n.Tlat,CEILING(rand()*5) as type from (select x.`from`,x.line_name ,y.lat as Flat,y.lng as Flng from (select * from line_info a  where  a.`level`=#{level} and a.`from` in (select b.st_name from st_location b where b.area=#{area}) and a.`to` in (select b.st_name from st_location b where b.area=#{area})GROUP BY a.`from` ,a.`to` limit 40)x,st_location y where y.st_name=x.`from`) m left join
(select x.`to`,x.line_name ,y.lat as Tlat,y.lng as Tlng from (select * from line_info a  where  a.`level`=#{level} and a.`from` in (select b.st_name from st_location b where b.area=#{area}) and a.`to` in (select b.st_name from st_location b where b.area=#{area})GROUP BY a.`from` ,a.`to` limit 40)x,st_location y where y.st_name=x.`to`)n on m.line_name=n.line_name
</select>
  <select id="selectProvinceTopo"  parameterType="java.lang.String" resultType="java.util.Map">
select m.Flng,m.Flat,m.line_name as name,n.Tlng,n.Tlat,CEILING(rand()*5) as type from (select x.`from`,x.line_name,st_location.lng as Flng,st_location.lat as Flat from (select * from line_info a where a.`from` in (select  st_name from st_location where province =#{area}) and a.`to` in (select  st_name from st_location where province =#{area}) and a.level=#{level} group by a.`from`,a.`to` limit 40)x,st_location where x.`from`=st_location.st_name)m left join(select y.`to`,y.line_name,st_location.lng as Tlng,st_location.lat as Tlat from(select * from line_info a where a.`from` in (select  st_name from st_location where province =#{area}) and a.`to` in (select  st_name from st_location where province =#{area}) and a.level=#{level} group by a.`from`,a.`to` limit 40)y,st_location where y.`to`=st_location.st_name)n on m.line_name=n.line_name
  </select>
  <select id="selectCityTopo"  parameterType="java.lang.String" resultType="java.util.Map">
select m.Flng,m.Flat,m.line_name as name,n.Tlng,n.Tlat,CEILING(rand()*5) as type from (select x.`from`,x.line_name,st_location.lng as Flng,st_location.lat as Flat from (select * from line_info a  where a.`level`=#{level}  and a.`from` in (select  st_name from st_location where city =#{city}) and a.`to` in (select  st_name from st_location where city =#{city})group by a.`from`,a.`to` )x,st_location where x.`from`=st_location.st_name)m
left join
(select y.`to`,y.line_name,st_location.lng as Tlng,st_location.lat as Tlat from(select * from line_info a where a.`level`=#{level}  and a.`from` in (select  st_name from st_location where city =#{city}) and a.`to` in (select  st_name from st_location where city =#{city}) group by a.`from`,a.`to`)y,st_location where y.`to`=st_location.st_name)n on m.line_name=n.line_name </select>



    <!--获得全国、区域、省、市的场站信息-->
  <select id="selectLocation"  parameterType="java.lang.String" resultType="java.util.Map">
select a.id,a.lat,a.lng,a.type from st_location a where a.type in('110kV','220kV','500kV','1000kV')  </select>
  <select id="selectAreaLocation"  parameterType="java.lang.String" resultType="java.util.Map">
select a.id,a.lat,a.lng,a.type from st_location a where a.area=#{area}
 </select>
  <select id="selectProvinceLocation"  parameterType="java.lang.String" resultType="java.util.Map">
select a.id,a.lat,a.lng,a.type from st_location a where a.province=#{area}
 </select>
  <select id="selectCityLocation"  parameterType="java.lang.String" resultType="java.util.Map">
  select a.id,a.lat,a.lng,a.type from st_location a where a.city=#{area}
  </select>


    <!--获得全国、区域、省、市的拓扑结构中的场站信息-->
  <select id="selectGlobalTopoLocation"  parameterType="java.lang.String" resultType="java.util.Map">
 select id,st_name,lng,lat,CEILING(rand()*3)+30 as height,type FROM st_location WHERE st_name in(SELECT `from` FROM dc_line) or st_name in(SELECT `to` FROM dc_line)
 </select>
  <select id="selectAreaTopoLocation"  parameterType="java.lang.String" resultType="java.util.Map">
select st_location.id,st_name,lng,lat,type, CEILING(rand()*3)+30 as height from st_location where st_location.st_name in (select n.`from` from (select * from line_info a  where a.`level`=#{level} and a.`from` in (select b.st_name from st_location b where b.area=#{area}) and a.`to` in (select b.st_name from st_location b where b.area=#{area})GROUP BY a.`from` ,a.`to` limit 40)n)
or st_location.st_name in (select m.`to` from (select * from line_info a  where  a.`level`=#{level} and a.`from` in (select b.st_name from st_location b where b.area=#{area}) and a.`to` in (select b.st_name from st_location b where b.area=#{area})GROUP BY a.`from` ,a.`to` limit 40)m)
  </select>
  <select id="selectProvinceTopoLocation"  parameterType="java.lang.String" resultType="java.util.Map">
    select id,st_name,lng,lat,CEILING(rand()*3)+30 as height,type FROM st_location WHERE st_name in(SELECT x.`from` FROM (select a.* from line_info a where a.`from` in (select  st_name from st_location where province =#{area}) and a.`to` in (select  st_name from st_location where province =#{area}) and a.level=#{level} group by a.`from`,a.`to` limit 40)x) or st_name in(SELECT y.`to` FROM (select a.* from line_info a where a.`from` in (select  st_name from st_location where province =#{area}) and a.`to` in (select  st_name from st_location where province =#{area}) and a.level=#{level}group by a.`from`,a.`to` limit 40)y)
    </select>
  <select id="selectCityTopoLocation"  parameterType="java.lang.String" resultType="java.util.Map">
select id,st_name,lng,lat,CEILING(rand()*3)+30 as height,type FROM st_location WHERE st_name in(SELECT x.`from` FROM (select a.* from line_info a where a.`from` in (select  st_name from st_location where city =#{city}) and a.`to` in (select  st_name from st_location where city =#{city}) and a.level =#{level} group by a.`from`,a.`to` )x) or st_name in(SELECT y.`to` FROM (select a.* from line_info a where a.`from` in (select  st_name from st_location where city =#{city}) and a.`to` in (select  st_name from st_location where city =#{city})and a.level =#{level} group by a.`from`,a.`to`)y)    </select>

  <!--获得省的拼音-->
  <select id="selectPinyinOfProvince"  parameterType="java.lang.String" resultType="java.util.Map">
select a.english from province a where a.province=#{province}  </select>

  <select id="getNameById" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT `name` FROM location_info WHERE node_id = #{id}
    </select>

  <!--根据省获取市-->
  <select id="selectCityByProvince" parameterType="java.lang.String" resultType="java.lang.String">
        select distinct(a.city) from city a where a.province=#{province}
    </select>

  <!--根据市获取区-->
  <select id="selectCountyByCity" parameterType="java.lang.String" resultType="java.lang.String">
    select distinct(a.county) from city a where a.city=#{city} and length(county)>0
    </select>
</mapper>